//문제 출처 https://school.programmers.co.kr/learn/courses/30/lessons/120852

/*
문제 설명
소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것입니다. 
예를 들어 12를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있습니다.
따라서 12의 소인수는 2와 3입니다.
자연수 n이 매개변수로 주어질 때 n의 소인수를 오름차순으로 담은 배열을 return하도록
solution 함수를 완성해주세요.

제한사항
2 ≤ n ≤ 10,000


입출력   예
n	    result
12	    [2, 3]
17	    [17]
420	    [2, 3, 5, 7]

*/

//풀이 
/* 상당히 오래 걸린 문제 였다. 
소인수분해를 어떻게 로직을 짜야될지 어려움이 많았다.

소인수분해 방법을 검색해서 하나씩 계속 나누기를 하는것에 힌트를 얻어서 작성하였다.
for 반복문을 돌려서 소인수 구하고 그것으로 숫자를 나누어주고 
break문을 통하여 나누어진 값으로 다시 반복문을 반복한다.




*/
function solution(n) {
    var result = []
    var a = n
    while(a>1){  //1이상일경우 반복문 실행
        for (i=2; i<=a; i++){
            if (a % i === 0) {  //나누어 떨어질경우 
                result.push(i)  //그 나누어 떨어지는 수를 배열에 추가
                a = a / i       //나누어 떨어지는 수와 나눈 수의 값을 새로운 값으로 업데이트
                break           //반복문을 초기화 업데이트된 수로 다시 처음부터 반복!
            }
        }
       
    }
    const answer  = new Set (result)  //Set을 사용하여 배열에서 중복된 값 제거
    return [...answer]
}



console.log(solution(420))






